{{ config(
    materialized='view',
    database='CUSTOMER_PURCHASES',
    schema='PURCHASE_ANALYTICS',
    tags=['purchase_analytics_views']
) }}


WITH 
-- SOURCE THE POSTCODE, AND IT'S COUNTRY & REGION
SOURCE_POSTCODES AS (
    SELECT DISTINCT
        POSTCODE, COUNTRY, REGION 
    FROM {{ ref('Postcode_Details_vw') }} 
    WHERE TERMINATED IS NULL 
    AND VALID_TO > DATEADD(DAY, -1, CURRENT_DATE) 
)
-- SOURCE CUSTOMERS AND TRANSACTIONS FOR DAY 
, SOURCE_TXNS AS (
    SELECT 
        CUSTOMER_ID, TRANSACTION_TS, PRODUCT, QUANTITY
    FROM {{ ref('Purchases_vw') }} 
    WHERE 
        TO_DATE(TRANSACTION_TS) > DATEADD(DAY, -1, CURRENT_DATE)
)
-- SOURCE THE CUSTOMER & POSTCODE LOOKUP
, CUST_POSTCODES AS (
    SELECT DISTINCT 
        ID, POSTCODE 
    FROM {{ ref('Customers_vw') }} 
    WHERE VALID_TO > DATEADD(DAY, -1, CURRENT_DATE) 
)
-- CREATE A LINK OF COUNTRY & REGION TO EACH CUSTOMER 
, COMBINE_TO_CUSTOMERS AS (
    SELECT 
        TO_DATE(TXNS.TRANSACTION_TS) AS DATE,
        TXNS.*,
        CP.POSTCODE,
        SP.COUNTRY, SP.REGION 
    FROM 
       SOURCE_TXNS AS TXNS 
    LEFT JOIN 
        CUST_POSTCODES AS CP 
    ON TXNS.CUSTOMER_ID = CP.ID 

    LEFT JOIN 
        SOURCE_POSTCODES AS SP 
    ON CP.POSTCODE = SP.POSTCODE     
)
-- SELECT FROM THE RESULTS & GROUP SALES BY PRODUCTS & REGIONS (REMOVE ANY NULL REGIONS)
SELECT 
    DATE,
    REGION, 
    PRODUCT,
    SUM(QUANTITY) AS QUANTITY_SOLD 
FROM COMBINE_TO_CUSTOMERS
WHERE REGION IS NOT NULL 
GROUP BY DATE, REGION, PRODUCT